name: CI/CD Pipeline - Payment App

on:
  push:
    branches: [master]

jobs:
  sonar-analysis:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: SonarQube Scan - Frontend
      uses: SonarSource/sonarqube-scan-action@v2.0
      with:
        projectBaseDir: frontend
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    - name: SonarQube Scan - Backend
      uses: SonarSource/sonarqube-scan-action@v2.0
      with:
        projectBaseDir: backend
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  build-and-deploy:
    needs: sonar-analysis
    runs-on: ubuntu-latest

    services:
      docker:
        image: docker:dind
        options: >-
          --privileged
          -e DOCKER_TLS_CERTDIR=""
        ports:
          - 2375:2375

    env:
      DOCKER_HOST: tcp://localhost:2375

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # frontend build
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Build frontend
      run: |
        cd frontend
        npm install -g @angular/cli
        npm install
        ng build --configuration production

    # backend setup
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install backend dependencies
      run: |
        cd backend/auth_service
        python -m venv venv && source venv/bin/activate && pip install -r requirements.txt
        cd ../payment_service
        python -m venv venv && source venv/bin/activate && pip install -r requirements.txt

    # docker build & push
    - name: Docker build images
      run: |
        docker build -t payment-frontend ./frontend
        docker build -t auth-service ./backend/auth_service
        docker build -t payment-service ./backend/payment_service

    - name: Docker login to Nexus
      shell: bash
      run: |
        echo "${{ secrets.NEXUS_PASSWORD }}" | docker login http://${{ secrets.NEXUS_REPO_URL }} -u "${{ secrets.NEXUS_USERNAME }}" --password-stdin


    - name: Push images to Nexus
      run: |
        docker tag payment-frontend ${{ secrets.NEXUS_REPO_URL }}/payment-frontend:latest
        docker tag auth-service ${{ secrets.NEXUS_REPO_URL }}/auth-service:latest
        docker tag payment-service ${{ secrets.NEXUS_REPO_URL }}/payment-service:latest

        docker push ${{ secrets.NEXUS_REPO_URL }}/payment-frontend:latest
        docker push ${{ secrets.NEXUS_REPO_URL }}/auth-service:latest
        docker push ${{ secrets.NEXUS_REPO_URL }}/payment-service:latest

    - name: SSH Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/ubuntu/payment_app
          git pull origin main
          docker compose down
          docker compose pull
          docker compose up -d --build
