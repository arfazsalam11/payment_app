name: CI/CD Pipeline - Payment App

on:
  push:
    branches: [master]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Set up Node.js for Angular
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.18.0'

    - name: Install frontend dependencies and build
      run: |
        cd micro-services/frontend
        npm install -g @angular/cli
        npm install
        ng build --configuration production

    # 3. Set up Python for backend
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install backend dependencies
      run: |
        cd micro-services/backend/auth_service
        python -m venv venv && source venv/bin/activate && pip install -r requirements.txt
        cd ../payment_service
        python -m venv venv && source venv/bin/activate && pip install -r requirements.txt

    # 4. Run SonarQube scan - Frontend
    - name: SonarQube Scan - Frontend
      uses: SonarSource/sonarqube-scan-action@v2.0
      with:
        projectBaseDir: micro-services/frontend
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    # 5. Run SonarQube scan - Backend
    - name: SonarQube Scan - Backend
      uses: SonarSource/sonarqube-scan-action@v2.0
      with:
        projectBaseDir: micro-services/backend
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    # 6. Build Docker Images
    - name: Build Docker Images
      run: |
        docker build -t payment-frontend -f Dockerfile-frontend .
        docker build -t auth-service -f Dockerfile-auth ./micro-services/backend/auth_service
        docker build -t payment-service -f Dockerfile-payment ./micro-services/backend/payment_service

    # 7. Push Images to Nexus
    - name: Login to Nexus Docker registry
      run: echo "${{ secrets.NEXUS_PASSWORD }}" | docker login ${{ secrets.NEXUS_REPO_URL }} -u ${{ secrets.NEXUS_USERNAME }} --password-stdin

    - name: Tag and Push Docker Images
      run: |
        docker tag payment-frontend ${{ secrets.NEXUS_REPO_URL }}/payment-frontend:latest
        docker tag auth-service ${{ secrets.NEXUS_REPO_URL }}/auth-service:latest
        docker tag payment-service ${{ secrets.NEXUS_REPO_URL }}/payment-service:latest

        docker push ${{ secrets.NEXUS_REPO_URL }}/payment-frontend:latest
        docker push ${{ secrets.NEXUS_REPO_URL }}/auth-service:latest
        docker push ${{ secrets.NEXUS_REPO_URL }}/payment-service:latest

    # 8. SSH and Deploy to App EC2
    - name: SSH to App Server and Deploy
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd payment_app
          git pull origin main
          docker compose down
          docker compose pull
          docker compose up -d --build

